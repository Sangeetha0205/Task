{
  "stats": {
    "suites": 4,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2021-02-19T06:48:43.166Z",
    "end": "2021-02-19T06:48:43.336Z",
    "duration": 170,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "7b1dccf4-d0db-4974-b561-63d88c5601b4",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "67783047-ce91-46a4-aaf8-7a8a22bf058b",
        "title": "/GET ping service",
        "fullFile": "C:\\eapi-customer-api-master\\eapi-customer-api-master\\test\\unit\\test.js",
        "file": "\\test\\unit\\test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "it should GET ping status message",
            "fullTitle": "/GET ping service it should GET ping status message",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(url)\n\t.get('/v1/pharmacy/patient/ping')\n\t.end((err, res) => {\n\t\tres.should.have.status(200);\n\t\tres.body.status.should.equal('ok');\n\t\tres.body.apiname.should.equal('eapi-customer-rest');\n\t\tres.body.apiversion.should.equal('v1_0_0');\n\t\tdone();\n\t});",
            "err": {},
            "isRoot": false,
            "uuid": "ff954246-824b-4bf4-af14-ac87c480b18a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ff954246-824b-4bf4-af14-ac87c480b18a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 18,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "f3759f10-dddc-4324-99be-f3f1210a58bf",
        "title": "Test Info/Debug/Error Message Logging",
        "fullFile": "C:\\eapi-customer-api-master\\eapi-customer-api-master\\test\\unit\\test.js",
        "file": "\\test\\unit\\test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "it should log info message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log info message",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "logging.logInfo(\"SampleAplicationName\",101,1001,1,\"GET\",\"200\",\"Success\",\"TestInfoLog\",\"100ms\",null,null);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "151dc072-afda-4c7c-933a-b2b0eec1f45d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should log info message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log info message",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "logging.logInfo(null,102,1002,1,\"GET\",\"200\",\"Success\",\"TestInfoLog\",\"100ms\",null,null);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "407ad0fc-48f2-488e-bc3e-78b9203a2e7f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should log Debug message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log Debug message",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "logging.logDebug(\"SampleAplicationName\",103,1003,2,\"GET\",\"200\",\"Success\",\"TestDebugLog\",\"150ms\",null,null);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "8647baf7-653e-485a-b22a-8380e3790d16",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should log Debug message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log Debug message",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "logging.logDebug(null,104,1004,2,\"GET\",\"200\",\"Success\",\"TestDebugLog\",\"150ms\",null,null);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "2acfbd8e-1f86-4cd2-b8ca-0d1c3d09eedf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should log error message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log error message",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let error = new Error(\"Internal Error\")\nlogging.logError(\"SampleAplicationName\",105,1005,3,\"GET\",\"500\",\"Failure\",\"Error Occured %s\", \"50ms\",\"KFK-ERR-001\",\"Error accessing input topic\",error);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "d52cfe63-d4ef-4196-87ea-4ca049644092",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should log error message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log error message",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let error = new Error(\"Internal Error\")\nlogging.logError(null,106,1006,3,\"GET\",\"500\",\"Failure\",\"Error Occured %s\", \"50ms\",\"KFK-ERR-001\",\"Error accessing input topic\",error);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "802720b3-f4e6-4b78-8c5a-f7c7c502ba6f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "151dc072-afda-4c7c-933a-b2b0eec1f45d",
          "407ad0fc-48f2-488e-bc3e-78b9203a2e7f",
          "8647baf7-653e-485a-b22a-8380e3790d16",
          "2acfbd8e-1f86-4cd2-b8ca-0d1c3d09eedf",
          "d52cfe63-d4ef-4196-87ea-4ca049644092",
          "802720b3-f4e6-4b78-8c5a-f7c7c502ba6f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 8,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "fd916cc7-665f-487e-a6d4-ea6aae91d994",
        "title": "POST /v1/pharmacy/patient/",
        "fullFile": "C:\\eapi-customer-api-master\\eapi-customer-api-master\\test\\unit\\test.js",
        "file": "\\test\\unit\\test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "POST /v1/pharmacy/patient/ \"before all\" hook",
            "timedOut": false,
            "duration": 5,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var dbo = global.db.db(\"eapi_data\");\n\n\t\t/**Test Obj Creation */\n\t\tvar patientTestDoc = {\n\n\t\t\tpatientId: \"TXTX001\",\n\t\t\tfirstName: \"NAME001\" ,\n\t\t\taddressLine1:\"ADRESLINE1\",\n\t\t\tcity:\"CITY001\",\n\t\t\tzipCode:\"ZIP001\",\n\t\t\tstate:\"STATE001\",\n\t\t\tcardType:\"CARDTYPE001\",\n\t\t\tcreditCard:\"CRD001\",\n\t\t\tlastFourDigits:\"0000\",\n\t\t\texpiryMonth:\"12\",\n\t\t\texpiryYear:\"1111\",\n\t\t\tisDefault:true\n\t\t};\n\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tdbo.collection(\"tbf0_patient\").insertOne(patientTestDoc, function(err,res) {\n\t\t\tif (err) throw err;\n\t\t});\n\t\tdone();",
            "err": {},
            "isRoot": false,
            "uuid": "b93092f2-98fa-4d3b-8ea7-86fc09ba4168",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "POST /v1/pharmacy/patient/ \"after all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var dbo = global.db.db(\"eapi_data\");\n\t\tvar deleteQuery = { patientId: 'TXTX001' };\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tdbo.collection(\"tbf0_patient\").deleteOne(deleteQuery, function(err,res) {\n\t\t\tif (err) throw err;\n\t\t});\n\t\tdone();",
            "err": {},
            "isRoot": false,
            "uuid": "69804dda-85e0-43c2-9638-b9ad29ae4e23",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "it should get patient info",
            "fullTitle": "POST /v1/pharmacy/patient/ it should get patient info",
            "timedOut": false,
            "duration": 31,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n\t\t.post(\"/v1/pharmacy/patient?patientId=TXTX001\")\n\t\t.set(\"Authorization\",\"001\")\n\t\t.end((err,response)=>{\n\t\t\t\n\t\t\tresponse.should.have.status(200);\n\t\t\tresponse.body.should.be.a('object');\n\t\t\t\n\t\t\tresponse.body.should.have.property('patientId').eq(\"TXTX001\");\n\t\t\tresponse.body.should.have.property('customerShippingAddress');\n\t\t\tresponse.body.customerShippingAddress.should.have.property('addressLine1').eq(\"ADRESLINE1\");\n\t\t\tresponse.body.profilePaymentDetails[0].should.have.property('cardType').eq(\"CARDTYPE001\");\n\t\t\tdone();\n\t\t});",
            "err": {},
            "isRoot": false,
            "uuid": "4af4a6b5-b97d-4640-a0d0-19eb451b0697",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should return 404 when no matching records",
            "fullTitle": "POST /v1/pharmacy/patient/ it should return 404 when no matching records",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n\t\t.post(\"/v1/pharmacy/patient?patientId=TXTX001001\")\n\t\t.set(\"Authorization\",\"001\")\n\t\t.end((err,response)=>{\n\t\t\n\t\t\tresponse.should.have.status(404);\n\t\t\tresponse.body.should.be.a('object');\n\t\t\tresponse.body.should.have.property('messages');\n\t\t\tresponse.body.messages[0].should.have.property('code').eq('WAG_E_SEARCH_1000');\n\t\t\tresponse.body.messages[0].should.have.property('type').eq('ERROR');\n\t\t\tdone();\n\t\t});",
            "err": {},
            "isRoot": false,
            "uuid": "4845dea5-9c18-434f-9276-3b296a2da2ba",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should return 405 when invalid method call",
            "fullTitle": "POST /v1/pharmacy/patient/ it should return 405 when invalid method call",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n\t\t.get(\"/v1/pharmacy/patient?patientId=TXTX001\")\n\t\t.set(\"Authorization\",\"001\")\n\t\t.end((err,response)=>{\n\t\t\tresponse.should.have.status(405);\n\t\t\tresponse.body.should.be.a('object');\n\t\t\tresponse.body.should.have.property('messages');\n\t\t\tresponse.body.messages[0].should.have.property('code').eq('WAG_E_INVALID_METHOD_1001');\n\t\t\tresponse.body.messages[0].should.have.property('type').eq('ERROR');\n\t\t\tdone();\n\t\t});",
            "err": {},
            "isRoot": false,
            "uuid": "6ed219ae-bffc-4611-9d7a-317bdb26bbb7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should return 401 if not authenticated",
            "fullTitle": "POST /v1/pharmacy/patient/ it should return 401 if not authenticated",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n\t\t.post(\"/v1/pharmacy/patient?patientId=TXTX001\")\n\t\t.end((err,response)=>{\n\t\t\tresponse.should.have.status(401);\n\t\t\tresponse.body.should.be.a('object');\n\t\t\tresponse.body.should.have.property('messages');\n\t\t\tresponse.body.messages[0].should.have.property('code').eq('WAG_E_UNAUTHORIZED_REQUEST_1001');\n\t\t\tresponse.body.messages[0].should.have.property('type').eq('ERROR');\n\t\t\tdone();\n\t\t});",
            "err": {},
            "isRoot": false,
            "uuid": "89e6bdf4-769b-40f5-a6d0-0b510a9846d8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should return 400 when request have missing patientId",
            "fullTitle": "POST /v1/pharmacy/patient/ it should return 400 when request have missing patientId",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n\t\t.post(\"/v1/pharmacy/patient\")\n\t\t.end((err,response)=>{\n\t\t\tresponse.should.have.status(400);\n\t\t\tresponse.body.should.be.a('object');\n\t\t\tresponse.body.should.have.property('messages');\n\t\t\tresponse.body.messages[0].should.have.property('code').eq('WAG_E_INVALID_REQUEST_1001');\n\t\t\tresponse.body.messages[0].should.have.property('type').eq('ERROR');\n\t\t\tdone();\n\t\t});",
            "err": {},
            "isRoot": false,
            "uuid": "37870a9d-73ef-46c5-bd89-a601ce395459",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "0a04c184-f9de-4763-942e-25ef9b478486",
            "title": "Test DB Conectivity",
            "fullFile": "C:\\eapi-customer-api-master\\eapi-customer-api-master\\test\\unit\\test.js",
            "file": "\\test\\unit\\test.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "POST /v1/pharmacy/patient/ Test DB Conectivity \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "dbconnection=global.db;\n\t\t\tglobal.db=undefined;//mocking db- connection as 'undefined'\n\t\t\tdone();",
                "err": {},
                "isRoot": false,
                "uuid": "795487cf-a396-4b1b-8996-258e7787cf97",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [
              {
                "title": "\"after all\" hook",
                "fullTitle": "POST /v1/pharmacy/patient/ Test DB Conectivity \"after all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "global.db=dbconnection; //resetting db connection back.\n\t\t\tdone();",
                "err": {},
                "isRoot": false,
                "uuid": "a59b6096-beb4-4727-ba71-785a9c3b8543",
                "isHook": true,
                "skipped": false
              }
            ],
            "tests": [
              {
                "title": "it should return 503 when db is down",
                "fullTitle": "POST /v1/pharmacy/patient/ Test DB Conectivity it should return 503 when db is down",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n.post(\"/v1/pharmacy/patient?patientId=TXTX001\")\n.set(\"Authorization\",\"001\")\n.end((err,response)=>{\n\t\n\tresponse.should.have.status(503);\n\tresponse.body.should.be.a('object');\n\tresponse.body.should.have.property('messages');\n\tresponse.body.messages[0].should.have.property('code');\n\tresponse.body.messages[0].should.have.property('type');\n\tdone();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "b782e9ab-5325-41c6-b6a7-cfff20a59a1f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b782e9ab-5325-41c6-b6a7-cfff20a59a1f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 11,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          }
        ],
        "passes": [
          "4af4a6b5-b97d-4640-a0d0-19eb451b0697",
          "4845dea5-9c18-434f-9276-3b296a2da2ba",
          "6ed219ae-bffc-4611-9d7a-317bdb26bbb7",
          "89e6bdf4-769b-40f5-a6d0-0b510a9846d8",
          "37870a9d-73ef-46c5-bd89-a601ce395459"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 56,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2021
}